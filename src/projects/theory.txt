
npm run build create a dist file
 dist file is a file in which all the content which is directly or indirectly mentioned in main function or inside into 
public folder are all convert into single html file named dist
all the file in public folder copy as it is but other files content are uglify 
 

npm run dev also create a dist file but in backend and reiniate it automatically again and again as comered to npm run dev
which make dist file only once and show it on folder ,every time we reload a dist file created and that file send to data base 


HOC
react component are functions that return JSX (HTML)
HOC (Higher order component) are not a componentthe are component modifiers .
hoc is a function jo ki parameter mein ek component lega aur ek naya component return kar dega.
we can also create our own hoc
usually 2 reasons to use HOC :
1.add something new to our component 
2.makes our component simpler 

HOC function (these are called HOOKS)
 1.memo() : memorize the tag data it see wheater input props changed or not, the tag  inside it run one time and memorize the data and then next time you rerun any file
 then that component do not rerun itself it return the memorize data  if their is no change in input props

 eg inport {memo} from "react";
   function button(){
    console.log(button run);
 }
 const newbutton = memo(button);
 export default newbutton;

 it is use in pure function
 pure function - output depend on input
 impure function - output depend on other things as well

 2.useMemo : similar as useEffect but memorize the data of function and return same data if input (dependency) is not changed .i.e. do not 
 rerun function inside it while reruning the file
 eg.   
 import {useMemo} from "react";
 const square = useMemo(
  function (){
    console.log("calcuting square ");
    return (count*count);
  },
  [count]             //dependency
 );
 in the above code [count] is the dependency ,useMemo run the function inside it at first time file run or when the dependency
 count in this case change and at other time it return the previous memorize ans i.e. data

 3.useCallback : it memorize the data usually functions in first page run and return the first stored data irresprctive how many 
 times you rerun the file till their is change in its dependency
 eg.
 import {useCallback} from "react";
 const changeCount = useCallback(
  function(){
    const newCount = count +1;
    setCount(newCount);        // call function for use state
  },
  [count]                           //dependency
 );
 in the above function the function inside useCallback will create each time when file rerun but it give always give old 
function which create at first time till the dependency change ;



